parameters {
		string(name: 'version', defaultValue: '19.10.0', description: 'version of gem')
		string(name: 'deployKey', defaultValue: 'xxx', description: 'key')
		string(name: 'testServerUrl', defaultValue: 'https://api-qa.groupdocs.cloud', description: 'server url')
		string(name: 'StartFromStage', defaultValue: '0', description: '0 based index of stage which will be started')		
}
node('words-linux') {         
    try {		
		stage('0:Merge master to testPackage'){	
			checkout([$class: 'GitSCM', branches: [[name: '*/release']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/assembly-cloud/assembly-ruby-sdk.git']]])
			sh "git config user.email 'jenkins.aspose@gmail.com'"
			sh "git config user.name 'jenkins'"

			sh "git checkout --merge testPackage"
			sh "git reset --hard origin/testPackage"
			sh "git merge --no-ff --allow-unrelated-histories origin/release"
			sh "git diff --name-status"			
			sh 'git commit -am "Merged release branch to testPackage" || exit 0'
			
			withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
				sh "git push https://$gitUsername:$gitPass@git.auckland.dynabic.com/assembly-cloud/assembly-ruby-sdk.git testPackage"
			}
		}			                
    } finally {                       
        cleanWs()
    }
}

stage('1:wait for publishing'){
	timeout(time:1, unit:'DAYS') {
		input message:'Ready for publishing to rubygems?'
	}
}


def testGemLocally()
{
	try {	
        stage('2:checkout again'){
			checkout([$class: 'GitSCM', branches: [[name: '*/testPackage']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/assembly-cloud/assembly-ruby-sdk.git']]])
			withCredentials([usernamePassword(credentialsId: '6179b564-811f-48a9-8b85-875076fadbf5', passwordVariable: 'AppKey', usernameVariable: 'AppSid')]) {
				sh 'mkdir -p Settings'
				sh 'echo "{\\"AppSid\\": \\"$AppSid\\",\\"AppKey\\": \\"$AppKey\\", \\"BaseUrl\\": \\"${testServerUrl}\\"}" > Settings/servercreds.json'
			}
        }
		
	    stage('3:build gem and test'){
			docker.image('ruby:2.4').inside('-u root'){
				stage('upload to rubygems'){
					sh "gem build groupdocs_assembly_cloud.gemspec"
					sh "gem install ./groupdocs_assembly_cloud-${version}.gem"
				}
				
				stage('test gem locally'){
					sh "mkdir testReports"
					sh "gem install bundler && bundle install"
					try{
						sh 'rake test'
					} finally{
						junit 'testReports/report/*.xml'
					}
				}
				
				stage('clean-compiled'){
					sh "rm -rf %s"
				}
			} 
	    }     
    } finally {                       
        cleanWs()
    }
}

def publishGem()
{
	try {	
        stage('4:checkout again'){
			checkout([$class: 'GitSCM', branches: [[name: '*/release']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/assembly-cloud/assembly-ruby-sdk.git']]])
		}			
		    
	    stage('5:build gem publish'){	
			docker.image('ruby:2.4').inside('-u root'){
				stage('upload to rubygems'){
					sh "gem build groupdocs_assembly_cloud.gemspec"
					sh "mkdir ~/.gem"
					sh "touch ~/.gem/credentials"
					withCredentials([string(credentialsId: '81c7971e-73cc-4adc-9b66-7884ec411c9f', variable: 'deployKey')]) {
						sh "echo ':rubygems_api_key: $deployKey' > ~/.gem/credentials"
					}
					sh "chmod 0600 ~/.gem/credentials"
					sh "gem push groupdocs_assembly_cloud-${version}.gem"
				}
				
				stage('clean-compiled'){
					sh "rm -rf %s"
				}
			}
	    }
		stage('6:add version tag'){
			checkout([$class: 'GitSCM', branches: [[name: '*/release']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/assembly-cloud/assembly-ruby-sdk.git']]])
						
				sh "git config user.email \"jenkins.aspose@gmail.com\""
				sh "git config user.name \"jenkins\""
				sh "git tag -a ${version} -m 'version ${version}' | exit 0"
				
				withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
					sh "git push https://$gitUsername:$gitPass@git.auckland.dynabic.com/assembly-cloud/assembly-ruby-sdk.git ${version}"
				}
        }           
    } finally {                       
        cleanWs()
    }
}

node('words-linux') {
	   stage('Merge master to release'){
			checkout([$class: 'GitSCM', branches: [[name: '*/release']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/assembly-cloud/assembly-ruby-sdk.git']]])
			sh "git config user.email 'jenkins.aspose@gmail.com'"
			sh "git config user.name 'jenkins'"
			sh "git checkout --merge release"
			sh "git reset --hard origin/release"
			sh "git merge --no-ff --allow-unrelated-histories origin/master"
			sh "git diff --name-status"			
			sh 'git commit -am "Merged master branch to release" || exit 0'
			withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
				sh "git push https://$gitUsername:$gitPass@git.auckland.dynabic.com/assembly-cloud/assembly-ruby-sdk.git release"
			}
	}
	try {
		testGemLocally()
	} finally {
		cleanWs()
	}
	
	try {
		publishGem()
	} finally {
		cleanWs()
	}
}
